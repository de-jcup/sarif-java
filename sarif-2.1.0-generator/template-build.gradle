// SPDX-License-Identifier: MIT
apply plugin: 'java'

apply plugin: 'signing'
apply plugin: 'maven-publish'

buildscript {
  apply from: "../../libraries.gradle"
}

group = "de.jcup.sarif.java"
version = System.getenv('SARIF_GENERATED_LIB_RELEASE_VERSION')

repositories {
  mavenCentral()
}

dependencies {
  implementation library.jackson_databind
}

java {
    sourceCompatibility = '$GEN_LIBRARY_JAVA_VERSION'
    targetCompatibility = '$GEN_LIBRARY_JAVA_VERSION'
}


java {
//    withJavadocJar()
    withSourcesJar()
}


publishing {

   repositories {
    maven {
      name = "OSSRH"
      url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = System.getenv("MAVEN_USERNAME")
        password = System.getenv("MAVEN_PASSWORD")
      }
    }
  }

  publications {
        mavenJava(MavenPublication) {
        
            from components.java
        
            pom {
                name = 'sarif-java'
                description = 'A java library to read and write SARIF reports.'
                url = 'https://github.com/de-jcup/sarif-java'
                
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                
                developers {
                    developer {
                        id = 'de-jcup'
                        name = 'Albert Tregnaghi'
                        email = 'albert.tregnaghi@gmail.com'
                    }
                }
                scm {
                      connection = 'scm:git:https://github.com/de-jcup/sarif-java.git'
                      developerConnection = 'https://github.com/de-jcup/sarif-java.git'
                      url = 'https://github.com/de-jcup/sarif-java'
                }
            }
        }
    }
}

// https://docs.gradle.org/current/userguide/signing_plugin.html
signing {
    
    def signingKey = System.getenv("SIGNING_KEY")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    
    sign publishing.publications.mavenJava
}
