// SPDX-License-Identifier: MIT

// Use the java plugin 
apply plugin: 'java'

apply plugin: 'jsonschema2pojo'

buildscript {

  apply from: "libraries.gradle"
  
  repositories {
    mavenCentral()
  }

  dependencies {
    // this plugin
    classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:1.1.3'
  }
}

repositories {
  mavenCentral()
}

dependencies {
  // Required if generating Jackson 2 annotations
  implementation library.jackson_annotations
}

// See here for all options: https://github.com/joelittlejohn/jsonschema2pojo/tree/master/jsonschema2pojo-gradle-plugin#usage
jsonSchema2Pojo {

  // Location of the JSON Schema file(s). This may refer to a single file or a directory of files.
  source = files("src/main/resources/sarif-json-schema")

  // Target directory for generated Java source files. The plugin will add this directory to the
  // java source set so the compiler will find and compile the newly generated source files.
  targetDirectory = file("gen/sarif-210/src/main/java")

  // Package name used for generated Java classes (for types where a fully qualified name has not
  // been supplied in the schema using the 'javaType' property).
  targetPackage = 'de.jcup.sarif.sarif210.model'
  
  // Whether to include a javax.annotation.Generated (Java 8 and lower) or
  // javax.annotation.processing.Generated (Java 9+) in on generated types (default true).
  includeGeneratedAnnotation = true
  
  // Whether to generate builder-style methods of the form withXxx(value) (that return this),
  // alongside the standard, void-return setters.
  generateBuilders = false
  
  // Whether to include hashCode and equals methods in generated Java types.
  includeHashcodeAndEquals = true

  // Whether to include a toString method in generated Java types.
  includeToString = true
  
  // Whether to include a javax.annotation.Generated (Java 8 and lower) or
  // javax.annotation.processing.Generated (Java 9+) in on generated types (default true).
  includeGeneratedAnnotation = false

  // The style of annotations to use in the generated Java types. Supported values:
  //  - jackson (alias of jackson2)
  //  - jackson2 (apply annotations from the Jackson 2.x library)
  //  - jsonb (apply annotations from the JSON-B 1 library)
  //  - jsonb2 (apply annotations from the JSON-B 2 library)
  //  - gson (apply annotations from the Gson library)
  //  - moshi1 (apply annotations from the Moshi 1.x library)
  //  - none (apply no annotations at all)
  annotationStyle = 'jackson2'
  
  // The Level of inclusion to set in the generated Java types (for Jackson serializers)
  // Supported values:
  //  ALWAYS
  //  NON_ABSENT
  //  NON_DEFAULT
  //  NON_EMPTY
  //  NON_NULL (default)
  //  USE_DEFAULTS
  inclusionLevel = 'NON_DEFAULT'
  
  // Whether to empty the target directory before generation occurs, to clear out all source files
  // that have been generated previously. <strong>Be warned</strong>, when activated this option
  // will cause jsonschema2pojo to <strong>indiscriminately delete the entire contents of the target
  // directory (all files and folders)</strong> before it begins generating sources.
  removeOldOutput = true
 
  // The character encoding that should be used when writing the generated Java source files
  outputEncoding = 'UTF-8'
  
  // Whether to initialize Set and List fields as empty collections, or leave them as null.
  initializeCollections = true
  
  // Whether to make the generated types Serializable
  serializable = false

  // Whether to include getters or to omit these accessor methods and create public fields instead.
  includeGetters = true

  // Whether to include setters or to omit these accessor methods and create public fields instead.
  includeSetters = true
  
  // What java source version to target with generated output (1.6, 1.8, 9, 11, etc)
  targetVersion = System.getenv("GEN_LIBRARY_JAVA_VERSION")
}
